#!/bin/bash


color () {
    
    # ---------------------------------------------
    #
    # \[        begin sequence of non-printing characters.
    # \]        end that sequence.
    #
    # both are used to enclose the color.
    #
    #
    # \033      is escape character.
    #
    # \e        means \033 but someone on stackoverflow said 
    #           it's not supported in all shells, so I'll 
    #           just stick with \033 for now.
    #
    # \033[     means we will start coloring.
    # 
    # \033[0m   means we will reset colors to normal. 
    #           (colors end with m and 0 -> reset)
    # ---------------------------------------------

    bseq="\x01\033["      # begins a color sequence
    eseq="\x02"           # end sequence

    mode=$1
    style=$2

    # ---------------------------------------------
    # Text Styles:
    # 0 -> Normal text
    # 1 -> Bold or light text (depending on terminal emulator) 
    # 2 -> Dim text
    # 3 -> Italicized bold text 
    # 4 -> Underlined text
    # 5 -> Blinking text (doesn't work in all terminal emulators)
    # 7 -> Reversed text (inverts fg and bg colors)
    # 8 -> Hidden text
    # ---------------------------------------------

    case $style in
        normal)     tstyle=0 ;;    # t is short for text;;
        bold)       tstyle=1 ;;
        dim)        tstyle=2 ;;
        italic)     tstyle=3 ;;
        underline)  tstyle=4 ;;
        blink)      tstyle=5 ;;
        reverse)    tstyle=7 ;;
        hide)       tstyle=8 ;;
    esac

    # ---------------------------------------------
    # Codes depend on your terminal emulator, so please 
    # refer to your terminal config for color codes.
    # 
    # However, they are generally the same or similar to 
    # codes below.
    #
    #
    # Note: I use foot terminal
    #
    # 0 – Black
    # 1 – Red
    # 2 – Green
    # 3 – yellow    (brown ?)
    # 4 – Blue
    # 5 – Purple
    # 6 – Cyan
    # 7 – White     (light grey?)
    # ---------------------------------------------
    
    if [ $mode == term ]; then
      
      case $4 in
          black)      color=0 ;;
          red)        color=1 ;;
          green)      color=2 ;;
          yellow)     color=3 ;;
          blue)       color=4 ;;
          purple)     color=5 ;;
          cyan)       color=6 ;;
          white)      color=7 ;;
      esac
    
      # when a color starts with 3 it means foreground color
      # when a color starts with 4 it means background color
      #
      case "$3" in
        fg) target=3 ;;
        bg) target=4 ;;
      esac
      

      # REMEMBER: 
      #	'echo' is used to return values
      #	'return' is used for exit codes (between 0 and 255), 0 means success
      echo "${bseq}${tstyle};${target}${color}m${eseq}"
    
    elif [ $mode == "rgb" ]; then

        # 38    forwards color to foreground
        # 2     means ANSI support (next sequence is r g b values of color)

        echo "${bseq}$tstyle;38;2;$3;$4;$5m${eseq}"
    fi
}

reset="\001\033[0m\002"
cursor="\e[3 q"

red="$(color term normal fg red)"
green="$(color term normal fg green)"

ired="$(color term italic fg red)"
iyellow="$(color term italic fg yellow)"

bgpurple="$(color term normal bg purple)"

# -----------------------------------------------------
# ESCAPE SEQUENCES USED:
# -----------------------------------------------------
# \n    new line
# \u    username
# \h    hostname
# \w    current working directory
# -----------------------------------------------------

#PS1="\n${red}┌──${igreen}[${ired}\u${igreen}@${igreen}\h${igreen}]-${iyellow}[\w]\n${red}└──${green}\$ ${reset}"

prompter () {
  if [[ "$?" == "0" ]]; then
    echo -e "\n${iyellow}[${PWD/#$HOME/'~'}]\n${green}>> ${reset}"
  else
    echo -e "\n${ired}[${PWD/#$HOME/'~'}]\n${red}>> ${reset}"
  fi
}

# Enable vi mode indicator
bind "set show-mode-in-prompt on"
bind "set vi-ins-mode-string \"\""
bind "set vi-cmd-mode-string \"${bgpurple} C ${reset} \""

PS1='`prompter`'
